<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:RecipeBox3.Resources.Styles"
                    xmlns:ctrls="clr-namespace:RecipeBox3.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Resources/Styles/Colors.xaml"/>
        <ResourceDictionary Source="Resources/Styles/Images.xaml"/>
        <ResourceDictionary Source="Resources/Styles/FlatComboBoxDictionary.xaml"/>
        <ResourceDictionary Source="Resources/Styles/FlatButtonDictionary.xaml"/>
        <ResourceDictionary Source="Resources/Styles/FlatMenuItemDictionary.xaml"/>
        <ResourceDictionary Source="Resources/Styles/FlatContextMenuDictionary.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- Base Hover responsive styles -->
    <Style TargetType="{x:Type Control}" x:Key="HoverableStyle">
        <Setter Property="Background" Value="{StaticResource ControlBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ControlTextBrush}"/>
        <Setter Property="Padding" Value="6,3"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ControlHoverBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Control}" x:Key="TextControlStyle">
        <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}"/>
        <Setter Property="Padding" Value="6,3"/>
    </Style>

    <Style x:Key="ToggleButtonHoverableStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource HoverableStyle}">
        <Setter Property="Template" Value="{StaticResource FlatToggleButtonTemplate}"/>
        <Setter Property="Margin" Value="3"/>

        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="MediumSeaGreen"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.7"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FlatButtonHoverableStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource HoverableStyle}">
        <Setter Property="Template" Value="{StaticResource FlatButtonTemplate}"/>
        <Setter Property="Margin" Value="6"/>
    </Style>

    <Style x:Key="MenuItemHoverableStyle" TargetType="{x:Type ctrls:ExtendedMenuItem}">
        <Setter Property="Background" Value="{StaticResource ControlMenuBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ControlTextBrush}"/>
        <Setter Property="SubMenuBrush" Value="{StaticResource ControlMenuBrush}"/>
        <Setter Property="Padding" Value="10,3"/>

        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource FlatMenuItemTopHeaderTemplate}"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource FlatMenuItemTopItemTemplate}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource FlatMenuItemSubHeaderTemplate}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource FlatMenuItemSubItemTemplate}"/>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ControlMenuHoverBrush2}"/>
            </Trigger>
            <Trigger Property="IsMouseOverSubMenu" Value="True">
                <Setter Property="Background" Value="{StaticResource ControlMenuHoverBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ComboBoxHoverableStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Template" Value="{StaticResource FlatComboBoxTemplate}"/>
        <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ControlTextBrush}"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Style.Triggers>
            <Trigger Property="IsDropDownOpen" Value="True">
                <Setter Property="Background" Value="WhiteSmoke"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FlatContextMenuStyle" TargetType="{x:Type ContextMenu}">
        <Setter Property="Template" Value="{StaticResource FlatContextMenuTemplate}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource ControlTextBrush}"/>
    </Style>

    <Style x:Key="DurationEntryStyle" TargetType="{x:Type ctrls:DurationEntryBox}">
        <Setter Property="OutlineBrush" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="InvalidColor" Value="Red"/>
        <Setter Property="Foreground" Value="{StaticResource ControlTextBrush}"/>
    </Style>


    <Style x:Key="DefaultWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <!-- ~10.5 pt -->
        <Setter Property="Foreground" Value="{StaticResource ControlTextBrush}"/>
    </Style>

    <Style x:Key="DefaultDataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{StaticResource GridBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ControlTextBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="AlternatingRowBackground" Value="LightGray"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Height" Value="Auto"/>
                    <Setter Property="Padding" Value="10,5"/>
                    <Setter Property="Background" Value="{StaticResource ControlBrush}"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{StaticResource ControlLightColor}"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="{StaticResource ControlTextColor}"/>
                    </Style.Resources>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>